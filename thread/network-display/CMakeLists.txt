cmake_minimum_required(VERSION 3.2)
project(network-display)
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_C_COMPILER "/usr/local/bin/arm-none-eabi-gcc")
set(CMAKE_CXX_COMPILER "/usr/local/bin/arm-none-eabi-g++")
set(SDK_ROOT "$ENV{HOME}/nonbackupped/nRF5_SDK_for_Thread_and_Zigbee_v4.1.0")
set(U8G2_ROOT "$ENV{HOME}/arduino/u8g2")
set(UZLIB_ROOT "$ENV{HOME}/Documents/dev/uzlib")
set(HFSM_ROOT "$ENV{HOME}/Documents/dev/HFSM")

add_definitions(-DNRF52840_XXAA)
add_definitions(-DBOARD_PCA10056)
add_definitions(-DAPP_TIMER_V2)

include_directories("${PROJECT_SOURCE_DIR}/src")
include_directories("${PROJECT_SOURCE_DIR}/src/eink_display")
include_directories("${PROJECT_SOURCE_DIR}/src/eink_display/good_display")
include_directories("${SDK_ROOT}/external/fprintf")
include_directories("${SDK_ROOT}/components/thread/utils")
include_directories("${SDK_ROOT}/components/libraries/experimental_section_vars")
include_directories("${SDK_ROOT}/external/nrf_cc310/include")
include_directories("${SDK_ROOT}/components/libraries/atomic")
include_directories("${SDK_ROOT}/components/libraries/delay")
include_directories("${SDK_ROOT}/components/toolchain/cmsis/include")
include_directories("${SDK_ROOT}/components/libraries/balloc")
include_directories("${SDK_ROOT}/components/libraries/log")
include_directories("${SDK_ROOT}/components/libraries/memobj")
include_directories("${SDK_ROOT}/components")
include_directories("${SDK_ROOT}/modules/nrfx/mdk")
include_directories("${SDK_ROOT}/components/libraries/scheduler")
include_directories("${SDK_ROOT}/components/libraries/strerror")
include_directories("${SDK_ROOT}/integration/nrfx")
include_directories("${SDK_ROOT}/modules/nrfx/drivers/include")
include_directories("${SDK_ROOT}/components/libraries/ringbuf")
include_directories("${SDK_ROOT}/modules/nrfx")
include_directories("${SDK_ROOT}/components/drivers_nrf/nrf_soc_nosd")
include_directories("${SDK_ROOT}/components/libraries/log/src")
include_directories("${SDK_ROOT}/external/segger_rtt")
include_directories("${SDK_ROOT}/modules/nrfx/hal")
include_directories("${SDK_ROOT}/external/openthread/include")
include_directories("${SDK_ROOT}/components/libraries/bsp")
include_directories("${SDK_ROOT}/components/boards")
include_directories("${SDK_ROOT}/components/libraries/timer")
include_directories("${SDK_ROOT}/components/libraries/button")
include_directories("${SDK_ROOT}/integration/nrfx/legacy")
include_directories("${SDK_ROOT}/components/libraries/util")
include_directories("${SDK_ROOT}/components/libraries/sha256")
include_directories("${SDK_ROOT}/components/libraries/crc32")
include_directories("${SDK_ROOT}/components/libraries/fstorage")
include_directories("${SDK_ROOT}/components/softdevice/mbr/nrf52840/headers")
include_directories("${SDK_ROOT}/components/libraries/mem_manager")
include_directories("${SDK_ROOT}/components/libraries/bootloader")
include_directories("${SDK_ROOT}/components/libraries/bootloader/dfu")
include_directories("${SDK_ROOT}/components/libraries/crypto")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/cc310")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/cc310_bl")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/mbedtls")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/oberon")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/micro_ecc")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/nrf_sw")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/nrf_hw")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/cifra")
include_directories("${SDK_ROOT}/components/libraries/crypto/backend/optiga")
include_directories("${SDK_ROOT}/components/libraries/pwr_mgmt")
include_directories("${SDK_ROOT}/components/iot/coap")
include_directories("${SDK_ROOT}/components/iot/common")
include_directories("${SDK_ROOT}/components/iot/background_dfu")
include_directories("${SDK_ROOT}/components/iot/background_dfu/transport")
include_directories("${SDK_ROOT}/components/iot/background_dfu/transport/coap")
include_directories("${SDK_ROOT}/components/iot/ipv6_parse")
include_directories("${SDK_ROOT}/external/nrf_tls")
include_directories("${SDK_ROOT}/external/nano-pb")
include_directories("${SDK_ROOT}/external/micro-ecc/micro-ecc")
include_directories("${U8G2_ROOT}/csrc")
include_directories("${HFSM_ROOT}/include")
include_directories("${UZLIB_ROOT}/src")

file(GLOB_RECURSE SRC_LIST "*.cpp")

add_executable(${PROJECT_NAME} ${SRC_LIST})
